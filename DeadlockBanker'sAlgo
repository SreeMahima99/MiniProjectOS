#include<iostream>



using namespace std;
int main()
{
    int instance[5],count,sequence[10],safe,s = 0,j,completed,i;
    int available[5],allocation[10][5], max[10][5];
    int need[10][5],process,P[10],countofr,countofp,running[10];
    cout<<"\n ENTER THE NUMBER OF RESOURCES(<=5)";
    cin>>countofr;
    
    for(int i=0; i<countofr;i++)
    {
        cout<<"\n ENTER THE MAX INSTANCES OF RESOURCE R["<<i<<"]:";
        cin>>instance[i];
        available[i]=instance[i];
    }
    cout<<"\n ENTER THE NUMBER OF PROCESS (<=10): ";
    cin>>countofp;
    cout<<"\n ENTER THE ALLOCATION MATRIX \n:";
    
    for(i=0; i<countofp;i++)
    {
        cout<<"FOR THE PROCESS P["<<i<<"]"<<endl;
        for(int j=0; j<countofr; j++)
        {
            cout<<"ALLOCATION OF RESOURCE R["<<j<<"] is :";
            cin>>allocation[i][j];
            available[j] = allocation[i][j];
        }
    }
    cout<<"\n ENTER THE MAX MATRIX \n\n";
    
    for(i=0; i<countofp;i++)
    {
        cout<<"FOR THE PROCESS P["<<i<<"]"<<endl;
        for(int j=0; j<countofr; j++)
        {
            cout<<"MAX DEMAND OF RESOURCE R ["<<j<<"] :";
            cin>>max[i][j];
        }
        
        
        cout<<"\n THE GIVEN DATA ARE : \n";
        
        cout<<endl<<"\n TOTAL RESOURCES IN SYSTEM: \n\n";
        for(int i =0;i<countofr;i++)
            cout<<"R["<<i<<"]";
        cout<<endl;
        for(i = 0; i<countofr;i++)
            cout<<"     "<<instance[i];
            
        cout<<"\n\n ALLOCATION matrix \n\n";
        for(j = 0; j<countofr; j++)
            cout<<"R["<<j<<"] ";
        cout<<endl;
        
        for (i= 0 ; i<countofp; i++)
        {
            cout<<"P["<<i<<"] ";
            for(j =0;j<countofr;j++)
                cout<<"     "<<allocation[i][j];
            cout<<endl;
        }
        
        cout<<"\n\n MAX MATRIX \n\n :";
        for (j=0;j<countofr;j++)
            cout<<"R["<<j<<"] :";
        cout<<endl;
        
        for (i=0;i<countofp;i++)
        {   cout<<"P["<<i<<"] :";
            for(j = 0;j<countofr;j++)
                cout<<" "<<max[i][j];
            cout<<endl;
        }
        for(i = 0;i<countofp;i++)
        {
            for(j=0;j<countofr;j++)
            {
                need[i][j] = max[i][j]-allocation[i][j];
            }
        }
        
        cout<<"\n\n NEED MATRIX \n\n ";
        for(j=0;j<countofr;j++)
            cout<<"R["<<j<<"] :";
        cout<<endl;
        
        for(i =0; i<countofp; i++)
        {   cout<<"P["<<i<<"] ";
            for(j = 0; j<countofr; j++)
                cout<<" "<<need[i][j];
            cout<<endl;
        }
        
        cout<<"\n NOW TO CHECK WHETHER ABOVE STATE IS SAFE ";
        cout<<"\n SEQUENCE IN WHICH ABOVE REQUESTS CAN BE FULFILLED";
        cout<<"\n PRESS ANY KEY TO CONTINUE";
        
        
        count = countofp;
        
        for(i =0 ; i<countofp;i++)
        {   running[i] = 1;
        
            while(count)
            {
                safe = 0;
                for(i =0; i<countofp; i++)
                {
                    if(running[i])
                    {   completed = 1 ;
                        for(j=0;j<countofr;j++)
                        {
                            if(need[i][j]>available[j])
                            {
                                completed =0;
                                break;
                            }
                        }
                        if(completed)
                        {
                            running[i] = 0;
                            count--;
                            safe = 1;
                            for(j=0; j<countofr;j++)
                            {
                                available[j]+=allocation[i][j];
                            }
                            sequence[s++] = i;
                            cout<<"\n\n REMAINING PROCESS P["<<i<<"]";
                            cout<<endl<<"\n\n TOTAL RESOURCES NOW AVAILABLE : \n\n ";
                            for(i = 0;i<countofr;i++)
                                cout<<"R["<<i<<"] ";
                            cout<<endl;
                            for(i = 0;i<countofr;i++)
                                cout<<" "<<available[i];
                            break;
                        }
                    }
                    
                }
                if(!safe)
                    break;
            }
            
            if(safe)
            {
                cout<<"\nTHE SYSTEM IS IN SAFE STATE ";
                cout<<"\nSAFE SEQUENCE IS: ";
                for(i = 0; i<countofp; i++)
                {
                    cout<<"\t"<<"P["<<sequence[i]<<"]";
                }
            }
            else
            {
                cout<<"\n THE SYSTEM IS IN UNSAFE STATE";
            }
        }
    }
}


